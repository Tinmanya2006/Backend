Script para la creación de la base de datos (DDL):

-- MySQL Script generated by MySQL Workbench
-- Thu Oct  3 18:49:30 202

-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema digitalN
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `digitalN` ;

-- -----------------------------------------------------
-- Schema digitalN
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `digitalN` DEFAULT CHARACTER SET utf8 ;
USE `digitalN` ;

-- -----------------------------------------------------
-- Table `digitalN`.`Usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `digitalN`.`Usuario` ;

CREATE TABLE IF NOT EXISTS `digitalN`.`Usuario` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `NickName` VARCHAR(20) NULL,
  `Email` VARCHAR(45) NULL,
  `name` VARCHAR(30) NULL,
  `password` VARCHAR(40) NULL,
  `biografía` VARCHAR(120) NULL,
  `avatar` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `NickName_UNIQUE` (`NickName` ASC),
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digitalN`.`Nota`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `digitalN`.`Nota` ;

CREATE TABLE IF NOT EXISTS `digitalN`.`Nota` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'La nota solo puede ser generada por un usuario de tipo administrador\n',
  `Descripción` VARCHAR(300) NULL,
  `Categoría` VARCHAR(45) NULL,
  `Creación` DATETIME NULL,
  `Finalización` DATETIME NULL,
  `Prioridad` INT NULL,
  `Asignacion` TINYINT NULL,
  `idusuario` INT UNSIGNED NULL,
  `estado` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digitalN`.`Grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `digitalN`.`Grupo` ;

CREATE TABLE IF NOT EXISTS `digitalN`.`Grupo` (
  `id` INT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NULL,
  `Admin` INT NULL,
  `Descripción` VARCHAR(200) NULL,
  `Nickname` VARCHAR(20) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digitalN`.`Chat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `digitalN`.`Chat` ;

CREATE TABLE IF NOT EXISTS `digitalN`.`Chat` (
  `id` INT NULL AUTO_INCREMENT,
  `nickname` VARCHAR(20) NULL,
  `Mensaje` VARCHAR(120) NULL,
  `fecha-msj` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digitalN`.`Usuario_has_Grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `digitalN`.`Usuario_has_Grupo` ;

CREATE TABLE IF NOT EXISTS `digitalN`.`Usuario_has_Grupo` (
  `idUsuario` INT NULL,
  `idGrupo` INT NULL,
  PRIMARY KEY (`idUsuario`, `idGrupo`),
  INDEX `idGrupo_idx` (`idGrupo` ASC),
  CONSTRAINT `fk_idUsuario`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `digitalN`.`Usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_idGrupo`
    FOREIGN KEY (`idGrupo`)
    REFERENCES `digitalN`.`Grupo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digitalN`.`genera`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `digitalN`.`genera` ;

CREATE TABLE IF NOT EXISTS `digitalN`.`genera` (
  `IdNota` INT NOT NULL,
  `IdUsuario` INT NOT NULL,
  INDEX `id_nota_idx` (`IdNota` ASC),  
  PRIMARY KEY (`IdNota`, `IdUsuario`),
  CONSTRAINT `id_nota`
    FOREIGN KEY (`IdNota`)
    REFERENCES `digitalN`.`Nota` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Id_Nickname`
    FOREIGN KEY (`IdUsuario`)
    REFERENCES `digitalN`.`Usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `digitalN`.`Grupo-Chat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `digitalN`.`Grupo-Chat` ;

CREATE TABLE IF NOT EXISTS `digitalN`.`Grupo-Chat` (
  `IdGrupo` INT NULL,
  `IdChat` INT NULL,
  PRIMARY KEY (`IdGrupo`, `IdChat`),
  INDEX `IdChat_idx` (`IdChat` ASC),
  CONSTRAINT `fk_Grupo`  -- Nombre cambiado para evitar conflictos
    FOREIGN KEY (`IdGrupo`)
    REFERENCES `digitalN`.`Grupo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Chat`
    FOREIGN KEY (`IdChat`)
    REFERENCES `digitalN`.`Chat` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `digitalN`.`Nota-Grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `digitalN`.`Nota-Grupo` ;

CREATE TABLE IF NOT EXISTS `digitalN`.`Grupo-Chat` (
  `IdGrupo` INT NULL,
  `IdChat` INT NULL,
  PRIMARY KEY (`IdGrupo`, `IdChat`),
  INDEX `IdChat_idx` (`IdChat` ASC),
  CONSTRAINT `fk_IdGrupo`  -- Renombrado de la restricción
    FOREIGN KEY (`IdGrupo`)
    REFERENCES `digitalN`.`Grupo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_IdChat`
    FOREIGN KEY (`IdChat`)
    REFERENCES `digitalN`.`Chat` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
